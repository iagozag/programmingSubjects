1) O programa realizava uma divisão por zero, além disso não retornava as variáveis certas de cada função.

2) Script started on 2023-09-08 19:02:36-03:00 [TERM="alacritty" TTY="/dev/pts/1" COLUMNS="148" LINES="36"]
[;f7:02PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c16 ]
 $ gcc -g c16.gd	  b a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...
(gdb) br 5
Breakpoint 1 at 0x1123: file c16.c, line 6.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c16/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, actual_calc (a=13, b=0) at c16.c:6
6	  c=a/b;
(gdb) p b
$1 = 0
(gdb) p a
$2 = 13
(gdb) next

Program received signal SIGFPE, Arithmetic exception.
0x0000555555555127 in actual_calc (a=13, b=0) at c16.c:6
6	  c=a/b;
(gdb) p c
$3 = 0
(gdb) c
Continuing.

Program terminated with signal SIGFPE, Arithmetic exception.
The program no longer exists.
(gdb) exit
[;f7:03PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c16 ]
 $ valgrind --leak-check=full ./a.ouvalgrind --leak-check=full ./a.out
==129864== Memcheck, a memory error detector
==129864== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129864== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129864== Command: ./a.out
==129864==
==129864==
==129864== Process terminating with default action of signal 8 (SIGFPE): dumping core
==129864==  Integer divide by zero at address 0x1003DF7D76
==129864==    at 0x109127: actual_calc (c16.c:6)
==129864==    by 0x109158: calc (c16.c:15)
==129864==    by 0x10916D: main (c16.c:20)
==129864==
==129864== HEAP SUMMARY:
==129864==     in use at exit: 0 bytes in 0 blocks
==129864==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==129864==
==129864== All heap blocks were freed -- no leaks are possible
==129864==
==129864== For lists of detected and suppressed errors, rerun with: -s
==129864== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1]    129864 floating point exception (core dumped)  valgrind --leak-check=full ./a.out
[;f7:03PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c16 ]
 $ exit

Script done on 2023-09-08 19:03:16-03:00 [COMMAND_EXIT_CODE="136"]

3) Os returns foram consertadas para retornar a variável calculada dentro da função e o divisor foi alterado de 0 para 2.

4) Script started on 2023-09-08 19:04:17-03:00 [TERM="alacritty" TTY="/dev/pts/1" COLUMNS="148" LINES="36"]
[;f7:04PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c16 ]
 $ gcc -g c16correto.gd			b a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...
(gdb) br 5
Breakpoint 1 at 0x1123: file c16correto.c, line 6.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c16/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, actual_calc (a=14, b=2) at c16correto.c:6
6	  c=a/b;
(gdb) next
7	  return c;
(gdb) p c
$1 = 7
(gdb) c
Continuing.
[Inferior 1 (process 130262) exited normally]
(gdb) exit
[;f7:04PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c16 ]
 $ valgrind --leak-check=full ./a.ouvalgrind --leak-check=full ./a.out
==130323== Memcheck, a memory error detector
==130323== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==130323== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==130323== Command: ./a.out
==130323==
==130323==
==130323== HEAP SUMMARY:
==130323==     in use at exit: 0 bytes in 0 blocks
==130323==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==130323==
==130323== All heap blocks were freed -- no leaks are possible
==130323==
==130323== For lists of detected and suppressed errors, rerun with: -s
==130323== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[;f7:04PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c16 ]
 $ exit

Script done on 2023-09-08 19:04:49-03:00 [COMMAND_EXIT_CODE="0"]

