1) No código, além da variável text não ser utilizada durante todo o código, a declaração da matriz e a liberação de memória estavam erradas.

2) Script started on 2023-09-08 16:27:01-03:00 [TERM="alacritty" TTY="/dev/pts/3" COLUMNS="148" LINES="36"]
[;f4:27PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c4 ]
 $ gcc -g c4.gd		b ./a.outb ./a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c4/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Program received signal SIGSEGV, Segmentation fault.
0x0000555555555156 in main () at c4.c:13
13	rotation3D->rows=4;
(gdb) exit
A debugging session is active.

	Inferior 1 [process 90029] will be killed.

Quit anyway? (y or n) y
[;f4:27PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c4 ]
 $ valgrind --leak-check=full ./a.ouval
vala			  valac-0.56		    vala-gen-introspect	      valgrind-di-server
vala-0.56		  valadoc		    vala-gen-introspect-0.56  valgrind-listener
valgrind --leak-check=fullv./a.outgrind --leak-check=fulli./a.out	      validate-pyproject
==90111== Memcheck, a memory error detector
==90111== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==90111== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==90111== Command: ./a.out
==90111==
==90111== Use of uninitialised value of size 8
==90111==    at 0x109156: main (c4.c:13)
==90111==
==90111== Invalid write of size 4
==90111==    at 0x109156: main (c4.c:13)
==90111==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==90111==
==90111==
==90111== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==90111==  Access not within mapped region at address 0x0
==90111==    at 0x109156: main (c4.c:13)
==90111==  If you believe this happened as a result of a stack
==90111==  overflow in your program's main thread (unlikely but
==90111==  possible), you can try to increase the size of the
==90111==  main thread stack using the --main-stacksize= flag.
==90111==  The main thread stack size used in this run was 8388608.
==90111==
==90111== HEAP SUMMARY:
==90111==     in use at exit: 0 bytes in 0 blocks
==90111==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==90111==
==90111== All heap blocks were freed -- no leaks are possible
==90111==
==90111== Use --track-origins=yes to see where uninitialised values come from
==90111== For lists of detected and suppressed errors, rerun with: -s
==90111== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
[1]    90111 segmentation fault (core dumped)  valgrind --leak-check=full ./a.out
[;f4:27PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c4 ]
 $ exit

Script done on 2023-09-08 16:27:49-03:00 [COMMAND_EXIT_CODE="139"]

3) Exclui a variável text e mudei o modo como a struct Matriz foi declarada. Além disso, primeiro exclui cada índice de array->data para depois dar free em array->data.

4) Script started on 2023-09-08 16:28:11-03:00 [TERM="alacritty" TTY="/dev/pts/3" COLUMNS="148" LINES="36"]
[;f4:28PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c4 ]
 $ gcc -g c4correto.gd		      b ./a.outb ./a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...
(gdb) break 9
Breakpoint 1 at 0x1152: file c4correto.c, line 9.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c4/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main () at c4correto.c:9
9	  struct Matrix * rotation3D = (struct Matrix*) malloc(sizeof(struct Matrix));
(gdb) next
10	  rotation3D->rows=4;
(gdb) next
11	  rotation3D->cols=4;
(gdb) continue
Continuing.
[Inferior 1 (process 90552) exited normally]
(gdb) exit
[;f4:29PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c4 ]
 $ valgrind --leak-check=full ./a.ouvalgrind --leak-check=full ./a.out
==90612== Memcheck, a memory error detector
==90612== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==90612== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==90612== Command: ./a.out
==90612==
==90612==
==90612== HEAP SUMMARY:
==90612==     in use at exit: 0 bytes in 0 blocks
==90612==   total heap usage: 6 allocs, 6 frees, 112 bytes allocated
==90612==
==90612== All heap blocks were freed -- no leaks are possible
==90612==
==90612== For lists of detected and suppressed errors, rerun with: -s
==90612== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[;f4:29PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c4 ]
 $ exit

Script done on 2023-09-08 16:29:31-03:00 [COMMAND_EXIT_CODE="0"]

