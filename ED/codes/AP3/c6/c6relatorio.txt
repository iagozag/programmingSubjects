1) A função resizeArray não atualizava o array->data com o dPtr.

2) Script started on 2023-09-08 16:54:59-03:00 [TERM="alacritty" TTY="/dev/pts/3" COLUMNS="148" LINES="36"]
[;f4:54PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c6 ]
 $ gcc -g c6.gd		b ./a.outb ./a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...
(gdb) break 19
Breakpoint 1 at 0x11bf: file c6.c, line 19.
(gdb) step
The program is not being run.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c6/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main () at c6.c:19
19	    array = resizeArray(array);
(gdb) ptarray->data
$1 = (int32_t *) 0x5555555592c0
(gdb) step
resizeArray (array=0x5555555592a0) at c6.c:11
11	    int32_t* dPtr = array->data;
(gdb) p dPtr
$2 = (int32_t *) 0x7fffffffe168
(gdb) p *dPtr
$3 = -7047
(gdb) p array->data
$4 = (int32_t *) 0x5555555592c0
(gdb) p *array->data
$5 = 0
(gdb) next
12	    dPtr = realloc(dPtr, 15 * sizeof(int32_t)); //doesn't update array->data
dPtrr->dataray->data
$6 = (int32_t *) 0x5555555592c0
*dPtr->dataray->data
$7 = 0
array->dataray->data
$8 = (int32_t *) 0x5555555592c0
pe*array->data>data
$9 = 0
(gdb) next
13	    return array;
continue*array->data
Continuing.
[Inferior 1 (process 97104) exited normally]
(gdb) exit
[;f4:56PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c6 ]
 $ valgrind --leak-check=full ./a.ouvalgrind --leak-check=full ./a.out
==97349== Memcheck, a memory error detector
==97349== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==97349== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==97349== Command: ./a.out
==97349==
==97349== Invalid free() / delete / delete[] / realloc()
==97349==    at 0x484412F: free (vg_replace_malloc.c:974)
==97349==    by 0x1091DD: main (c6.c:21)
==97349==  Address 0x4ac6090 is 0 bytes inside a block of size 40 free'd
==97349==    at 0x4846BE0: realloc (vg_replace_malloc.c:1649)
==97349==    by 0x109180: resizeArray (c6.c:12)
==97349==    by 0x1091CA: main (c6.c:19)
==97349==  Block was alloc'd at
==97349==    at 0x48469B3: calloc (vg_replace_malloc.c:1554)
==97349==    by 0x1091B4: main (c6.c:18)
==97349==
==97349==
==97349== HEAP SUMMARY:
==97349==     in use at exit: 60 bytes in 1 blocks
==97349==   total heap usage: 3 allocs, 3 frees, 116 bytes allocated
==97349==
==97349== 60 bytes in 1 blocks are definitely lost in loss record 1 of 1
==97349==    at 0x4846BE0: realloc (vg_replace_malloc.c:1649)
==97349==    by 0x109180: resizeArray (c6.c:12)
==97349==    by 0x1091CA: main (c6.c:19)
==97349==
==97349== LEAK SUMMARY:
==97349==    definitely lost: 60 bytes in 1 blocks
==97349==    indirectly lost: 0 bytes in 0 blocks
==97349==      possibly lost: 0 bytes in 0 blocks
==97349==    still reachable: 0 bytes in 0 blocks
==97349==	  suppressed: 0 bytes in 0 blocks
==97349==
==97349== For lists of detected and suppressed errors, rerun with: -s
==97349== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
[;f4:56PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c6 ]
 $ exit

Script done on 2023-09-08 16:56:31-03:00 [COMMAND_EXIT_CODE="0"]

3) Foi necessário adicionar array->data = dPtr para corrigir o código na linha 13.

4) Script started on 2023-09-08 16:56:49-03:00 [TERM="alacritty" TTY="/dev/pts/3" COLUMNS="148" LINES="36"]
[;f4:56PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c6 ]
 $ gcc -g c6correto.gd		      b ./a.outb ./a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...
(gdb) break 20
Breakpoint 1 at 0x11ca: file c6correto.c, line 20.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c6/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main () at c6correto.c:20
20	    array = resizeArray(array);
(gdb) step
resizeArray (array=0x5555555592a0) at c6correto.c:11
11	    int32_t* dPtr = array->data;
ptdPtrbreak 20
$1 = (int32_t *) 0x7fffffffe168
(gdb) p *dPtr
$2 = -7047
(gdb) p array->data
$3 = (int32_t *) 0x5555555592c0
(gdb) p * array->data
$4 = 0
(gdb) next
12	    dPtr = realloc(dPtr, 15 * sizeof(int32_t)); //doesn't update array->data
dPtrr->datarray->data
$5 = (int32_t *) 0x5555555592c0
*dPtr->datarray->data
$6 = 0
array->datarray->data
$7 = (int32_t *) 0x5555555592c0
pe*tarray->datadata
$8 = 0
(gdb) p-array->data[11]
$9 = 0
(gdb) p dPtr[11]
$10 = 0
(gdb) next
13	    array->data = dPtr;
(gdb) pearray->data[11]
$11 = 0
pedPtr[11]ray->data[11]
$12 = 0
dPtrr->datata[11]ta[11]
$13 = (int32_t *) 0x5555555592c0
array->datata[11]ta[11]
$14 = (int32_t *) 0x5555555592c0
(gdb) continue
Continuing.
[Inferior 1 (process 97536) exited normally]
(gdb) exit
[;f4:58PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c6 ]
 $ valgrind --leak-check=full ./a.ouvalgrind --leak-check=full ./a.out
==97904== Memcheck, a memory error detector
==97904== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==97904== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==97904== Command: ./a.out
==97904==
==97904==
==97904== HEAP SUMMARY:
==97904==     in use at exit: 0 bytes in 0 blocks
==97904==   total heap usage: 3 allocs, 3 frees, 116 bytes allocated
==97904==
==97904== All heap blocks were freed -- no leaks are possible
==97904==
==97904== For lists of detected and suppressed errors, rerun with: -s
==97904== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[;f4:58PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c6 ]
 $ exit

Script done on 2023-09-08 16:58:41-03:00 [COMMAND_EXIT_CODE="0"]

