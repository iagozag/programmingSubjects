1) Com os mallocs repetitivos, a memória alocada no malloc anterior era perdida assim que o próximo executava. E além disso, o último também não foi liberado da memória.

2) Script started on 2023-09-08 18:40:45-03:00 [TERM="alacritty" TTY="/dev/pts/1" COLUMNS="148" LINES="36"]
[;f6:40PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c13 ]
 $ gcc -g c13.gd	  bba.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...
(gdb) br 8
Breakpoint 1 at 0x1151: file c13.c, line 8.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c13/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main () at c13.c:8
8	  p = (char *) malloc(19);
(gdb) p p
$1 = 0x7ffff7ffdab0 <_rtld_global+2736> ""
(gdb) next
9	  p = (char *) malloc(12);
(gdb) p p
$2 = 0x5555555592a0 ""
(gdb) next
10	  free(p);
(gdb) p p
$3 = 0x5555555592c0 ""
(gdb) next
11	  p = (char *) malloc(16);
(gdb) p p
$4 = 0x5555555592c0 "YUUU\005"
(gdb) next
13	  return 0;
(gdb) p p
$5 = 0x5555555592c0 "YUUU\005"
(gdb) continue
Continuing.
[Inferior 1 (process 123766) exited normally]
(gdb) exit
[;f6:41PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c13 ]
 $ valgrind --leak-check=full ./a.ouvalgrind --leak-check=full ./a.out
==123853== Memcheck, a memory error detector
==123853== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==123853== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==123853== Command: ./a.out
==123853==
==123853==
==123853== HEAP SUMMARY:
==123853==     in use at exit: 35 bytes in 2 blocks
==123853==   total heap usage: 3 allocs, 1 frees, 47 bytes allocated
==123853==
==123853== 16 bytes in 1 blocks are definitely lost in loss record 1 of 2
==123853==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==123853==    by 0x109182: main (c13.c:11)
==123853==
==123853== 19 bytes in 1 blocks are definitely lost in loss record 2 of 2
==123853==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==123853==    by 0x10915A: main (c13.c:8)
==123853==
==123853== LEAK SUMMARY:
==123853==    definitely lost: 35 bytes in 2 blocks
==123853==    indirectly lost: 0 bytes in 0 blocks
==123853==	possibly lost: 0 bytes in 0 blocks
==123853==    still reachable: 0 bytes in 0 blocks
==123853==	   suppressed: 0 bytes in 0 blocks
==123853==
==123853== For lists of detected and suppressed errors, rerun with: -s
==123853== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
[;f6:41PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c13 ]
 $ exit

Script done on 2023-09-08 18:41:29-03:00 [COMMAND_EXIT_CODE="0"]

3) Alterei os últimos dois mallocs para reallocs e liberei a variável da memória ao final do programa.

4) Script started on 2023-09-08 18:42:05-03:00 [TERM="alacritty" TTY="/dev/pts/1" COLUMNS="148" LINES="36"]
[;f6:42PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c13 ]
 $ gcc -g c13correto.gd			b a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...
(gdb) br 8
Breakpoint 1 at 0x1161: file c13correto.c, line 8.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c13/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main () at c13correto.c:8
8	  p = (char *) malloc(19);
(gdb) p p
$1 = 0x7ffff7ffdab0 <_rtld_global+2736> ""
(gdb) next
9	  p = (char *) realloc(p, 12);
(gdb) p p
$2 = 0x5555555592a0 ""
(gdb) next
10	  p = (char *) realloc(p, 16);
(gdb) p p
$3 = 0x5555555592a0 ""
(gdb) next
11	  free(p);
(gdb) p p
$4 = 0x5555555592a0 ""
(gdb) next
12	  return 0;
(gdb) p p
$5 = 0x5555555592a0 "YUUU\005"
(gdb) continue
Continuing.
[Inferior 1 (process 124150) exited normally]
(gdb) exit
[;f6:42PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c13 ]
 $ valgrind --leak-check=full ./a.ouvalgrind --leak-check=full ./a.out
==124216== Memcheck, a memory error detector
==124216== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==124216== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==124216== Command: ./a.out
==124216==
==124216==
==124216== HEAP SUMMARY:
==124216==     in use at exit: 0 bytes in 0 blocks
==124216==   total heap usage: 3 allocs, 3 frees, 47 bytes allocated
==124216==
==124216== All heap blocks were freed -- no leaks are possible
==124216==
==124216== For lists of detected and suppressed errors, rerun with: -s
==124216== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[;f6:42PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c13 ]
 $ exit

Script done on 2023-09-08 18:42:38-03:00 [COMMAND_EXIT_CODE="0"]

