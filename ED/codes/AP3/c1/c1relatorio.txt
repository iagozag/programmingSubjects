1) Para o código c1, é possível ver que estava sendo assinalado um valor para um índice inexistente do array.

2) Script started on 2023-09-08 15:22:17-03:00 [TERM="alacritty" TTY="/dev/pts/3" COLUMNS="148" LINES="36"]
[;f3:22PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c1 ]
 $ gcc -g c1.gd		b a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c1/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".
[Inferior 1 (process 73767) exited normally]
(gdb) break 11
Breakpoint 1 at 0x5555555551a0: file c1.c, line 11.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c1/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main (argc=1, argv=0x7fffffffe158) at c1.c:11
11	  free(a);
(gdb) print a
$1 = (int *) 0x5555555592a0
(gdb) p a[10]
$2 = 10
(gdb) next
12	  return 0;
(gdb) pra[10]
$3 = 10
(gdb) q
A debugging session is active.

	Inferior 1 [process 73828] will be killed.

Quit anyway? (y or n) y
[;f3:32PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c1 ]
 $ valgrind --leak-check=full ./a.ouvalgrind --leak-check=full ./a.out
==75953== Memcheck, a memory error detector
==75953== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==75953== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==75953== Command: ./a.out
==75953==
==75953== Invalid write of size 4
==75953==    at 0x109194: main (c1.c:9)
==75953==  Address 0x4ac6068 is 0 bytes after a block of size 40 alloc'd
==75953==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==75953==    by 0x109161: main (c1.c:6)
==75953==
==75953==
==75953== HEAP SUMMARY:
==75953==     in use at exit: 0 bytes in 0 blocks
==75953==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==75953==
==75953== All heap blocks were freed -- no leaks are possible
==75953==
==75953== For lists of detected and suppressed errors, rerun with: -s
==75953== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
[;f3:32PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c1 ]
 $ exit

Script done on 2023-09-08 15:32:30-03:00 [COMMAND_EXIT_CODE="0"]

3) Foi necessário diminuir o valor máximo do for de 11 para 10.

4) Script started on 2023-09-08 15:33:37-03:00 [TERM="alacritty" TTY="/dev/pts/3" COLUMNS="148" LINES="36"]
[;f3:33PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c1 ]
 $ gcc -g c1correto.gd		      b a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...
(gdb) break 11
Breakpoint 1 at 0x11a0: file c1correto.c, line 11.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c1/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main (argc=1, argv=0x7fffffffe158) at c1correto.c:11
11	  free(a);
(gdb) p a[10]
$1 = 134465
(gdb) p a[9]
$2 = 9
(gdb) next
12	  return 0;
(gdb) p a[10]
$3 = 134465
(gdb) p a[9]
$4 = 9
(gdb) exit
A debugging session is active.

	Inferior 1 [process 76413] will be killed.

Quit anyway? (y or n) y
[;f3:34PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c1 ]
 $ valgrind --leak-check=full ./a.ouval
vala			  valac-0.56		    vala-gen-introspect	      valgrind-di-server
vala-0.56		  valadoc		    vala-gen-introspect-0.56  valgrind-listener
valgrind --leak-check=fullv./a.outgrind --leak-check=fulli./a.out	      validate-pyproject
==76517== Memcheck, a memory error detector
==76517== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==76517== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==76517== Command: ./a.out
==76517==
==76517==
==76517== HEAP SUMMARY:
==76517==     in use at exit: 0 bytes in 0 blocks
==76517==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==76517==
==76517== All heap blocks were freed -- no leaks are possible
==76517==
==76517== For lists of detected and suppressed errors, rerun with: -s
==76517== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[;f3:34PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c1 ]
 $ exit

Script done on 2023-09-08 15:34:41-03:00 [COMMAND_EXIT_CODE="0"]

