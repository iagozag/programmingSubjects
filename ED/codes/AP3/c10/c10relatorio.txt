1) O arquivo executava infinitamente e não liberava o p da memória gerando um vazamento infinito de memória.

2) Script started on 2023-09-08 18:20:54-03:00 [TERM="alacritty" TTY="/dev/pts/1" COLUMNS="148" LINES="36"]
[;f6:20PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c10 ]
 $ gcc -g c10.gd	  b a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...
(gdb) bre10 1
Breakpoint 1 at 0x115f: file c10.c, line 10.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c10/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main () at c10.c:10
10			printf("%ld\n", (long)p);
(gdb) p (longp
$1 = 93824992252576
(gdb) next
93824992252576
9			p = malloc(128);
(gdb) pe(long)p
$2 = 93824992252576
(gdb) next

Breakpoint 1, main () at c10.c:10
10			printf("%ld\n", (long)p);
(gdb) pe(long)p
$3 = 93824992253760
(gdb) continue
Continuing.
93824992253760

Breakpoint 1, main () at c10.c:10
10			printf("%ld\n", (long)p);
(gdb) delete 1
(gdb) continue
Continuing.
88791296
88791488
88791680
88791872
88792064
88792256
88792448
88792640
88792832
88793024
88793216
88793408
88793600
88793792
88793984
88794176
88794368
88794560
88794752
88794944
88795136
88795328
88795520
88795712
88795904
88796096
88796288
88796480
88796672
88796864
88797056
88797248
88797440
88797632
88797824
88798016
88798208
88798400
88798592
88798784
88798976
88799168
88799360
88799552
88799744
88799936
88800128
^C==119108==
==119108== Process terminating with default action of signal 2 (SIGINT)
==119108==    at 0x497A662: write (write.c:26)
==119108==    by 0x48FAD4C: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1181)
==119108==    by 0x48F9013: new_do_write (fileops.c:449)
==119108==    by 0x48F9E18: _IO_do_write@@GLIBC_2.2.5 (fileops.c:426)
==119108==    by 0x48FAEC6: _IO_new_file_xsputn (fileops.c:1244)
==119108==    by 0x48FAEC6: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==119108==    by 0x48CCB61: __printf_buffer_flush_to_file (printf_buffer_to_file.c:59)
==119108==    by 0x48CCC23: __printf_buffer_to_file_done (printf_buffer_to_file.c:120)
==119108==    by 0x48D6E59: __vfprintf_internal (vfprintf-internal.c:1524)
==119108==    by 0x48CC2FE: printf (printf.c:33)
==119108==    by 0x109179: main (c10.c:10)
==119108==
==119108== HEAP SUMMARY:
==119108==     in use at exit: 6,930,048 bytes in 54,134 blocks
==119108==   total heap usage: 54,134 allocs, 0 frees, 6,930,048 bytes allocated
==119108==
==119108== 6,928,896 bytes in 54,132 blocks are definitely lost in loss record 3 of 3
==119108==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==119108==    by 0x10915A: main (c10.c:9)
==119108==
==119108== LEAK SUMMARY:
==119108==    definitely lost: 6,928,896 bytes in 54,132 blocks
==119108==    indirectly lost: 0 bytes in 0 blocks
==119108==	possibly lost: 0 bytes in 0 blocks
==119108==    still reachable: 1,152 bytes in 2 blocks
==119108==	   suppressed: 0 bytes in 0 blocks
==119108== Reachable blocks (those to which a pointer was found) are not shown.
==119108== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==119108==
==119108== For lists of detected and suppressed errors, rerun with: -s
==119108== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

[;f6:23PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c10 ]
 $ exit

Script done on 2023-09-08 18:23:45-03:00 [COMMAND_EXIT_CODE="130"]

3) Mudei o programa para executar somente uma vez e livberei o a variável p da memória através do comando free.

4) Script started on 2023-09-08 18:30:07-03:00 [TERM="alacritty" TTY="/dev/pts/1" COLUMNS="148" LINES="36"]
[;f6:30PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c10 ]
 $ docker ps -a		  gcc -g c10correto.gd		       b a.out
GNU gdb (GDB) 13.2
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...
(gdb) br 9
Breakpoint 1 at 0x118a: file c10correto.c, line 9.
(gdb) run
Starting program: /home/iago/Documents/school/ufmg/3_Semestre/ED/codes/TP/c10/a.out
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".
93824992252576

Breakpoint 1, main () at c10correto.c:9
9		free(p);
(gdb) p (longp
$1 = 93824992252576
(gdb) next
10		return (0);
(gdb) pe(long)p
$2 = 93824992252576
(gdb) p p
$3 = (int *) 0x5555555592a0
(gdb) continue
Continuing.
[Inferior 1 (process 120705) exited normally]
(gdb) exit
[;f6:31PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c10 ]
 $ valgrind --leak-check=full ./a.ouvalgrind --leak-check=full ./a.out
==120785== Memcheck, a memory error detector
==120785== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==120785== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==120785== Command: ./a.out
==120785==
78405696
==120785==
==120785== HEAP SUMMARY:
==120785==     in use at exit: 0 bytes in 0 blocks
==120785==   total heap usage: 2 allocs, 2 frees, 1,152 bytes allocated
==120785==
==120785== All heap blocks were freed -- no leaks are possible
==120785==
==120785== For lists of detected and suppressed errors, rerun with: -s
==120785== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[;f6:31PMa]ch[siago@arch-sentinL1:~/Documents/school/ufmg/3_Semestre/ED/codes/TP/c10 ]
 $ exit

Script done on 2023-09-08 18:31:12-03:00 [COMMAND_EXIT_CODE="0"]

